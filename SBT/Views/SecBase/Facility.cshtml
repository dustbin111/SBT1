@model SBT.Models.SBTFacility

@{
    ViewBag.Title = "Facility";
    Layout = "~/Views/Shared/_SBTLayout.cshtml";
}

<h2>Facility</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Complete your facility information below.</h4>
        Some day, if the Security Baseline Tool were incorporated into NISS, this information would already be there.  But its not.  So you get to fill it out!
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @*@Html.LabelFor(model => model.FacilityCAGE, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">
                CAGE
            </label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.FacilityCAGE, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FacilityCAGE, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.FacilityName, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">
                Name
            </label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.FacilityName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FacilityName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.FacilityAddress1, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">
                Address 1
            </label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.FacilityAddress1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FacilityAddress1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.FacilityAddress2, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">
                Address 2
            </label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.FacilityAddress2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FacilityAddress2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.FacilityCity, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">
                City
            </label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.FacilityCity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FacilityCity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.FacilityState, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">
                State
            </label>
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.FacilityState, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FacilityState, "", new { @class = "text-danger" })*@

                @Html.DropDownListFor(model => model.FacilityState, (IEnumerable<SelectListItem>)ViewBag.States, "-- Select State --", new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.FacilityZIP, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">
                ZIP
            </label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.FacilityZIP, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FacilityZIP, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @*<input type="submit" value="Submit" class="btn btn-default" />
                <a href="@Url.Action("SecurityBaselineTemplate", "SecBase")" class="btn btn-default">Download Word (.docx)</a>*@

                <input type="submit" value="<< Back" formaction="@Url.Action("Facility", "SecBase", new { direction="Import"})" class="btn btn-default" />
                <input type="submit" value="Submit" formaction="@Url.Action("Facility", "SecBase", new { direction=""})" class="btn btn-default" />
                <input type="submit" value="Next >>" formaction="@Url.Action("Facility", "SecBase", new { direction="FOCI"})" class="btn btn-default" />
            </div>
        </div>
    </div>
}



@*<div>
    @Html.ActionLink("Back to List", "Index")
</div>*@
